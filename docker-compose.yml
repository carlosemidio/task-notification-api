services:
  app-task-notifications:
    build:
      args:
        user: ${SYS_USER}
        uid: ${SYS_UID}
      context: ./
      dockerfile: Dockerfile
    image: task-notifications
    container_name: app-task-notifications
    restart: unless-stopped
    expose:
      - 80
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./.docker/php/backend.ini:/usr/local/etc/php/conf.d/backend.ini
    networks:
      - application

  db-task-notifications:
    image: 'mysql/mysql-server:8.0'
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - './mysql:/var/lib/mysql:z'
    networks:
      - application
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - '-p${DB_PASSWORD}'
      retries: 3
      timeout: 5s

  phpmyadmin-task-notifications:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-task-notifications
    ports:
      - "8080:80"
    links:
      - "db-task-notifications:db"
    networks:
      - application

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./:/var/www
      - ./.docker/nginx:/etc/nginx/conf.d
      - ./.docker/certbot/conf:/etc/letsencrypt
      - ./.docker/certbot/www:/var/www/certbot
    ports:
      - "8050:80"
      - "80:80"
      # - "443:443"
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    networks:
      - application

networks:
  application:
    name: "task-notifications_network"
